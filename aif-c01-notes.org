#+TITLE: AWS Certified AI Practitioner (AIF-C01) Exam Notes
#+AUTHOR: Jason Walsh
#+EMAIL: j@wal.sh

* Domain 1: Fundamentals of AI and ML

** Key Concepts
- Artificial Intelligence
- Machine Learning
- Deep Learning
- Neural Networks

** ML Types
- Supervised Learning
- Unsupervised Learning
- Reinforcement Learning

** Data Types
- Labeled and Unlabeled
- Structured and Unstructured
- Time-series, Image, Text

* Domain 2: Fundamentals of Generative AI

** Key Concepts
- Tokens and Embeddings
- Prompt Engineering
- Transformer Architecture
- Foundation Models

** Use Cases
- Image and Text Generation
- Summarization and Translation
- Chatbots and Customer Service

* Domain 3: Applications of Foundation Models

** Selection Criteria
- Cost, Modality, Latency
- Model Size and Complexity

** Techniques
- Retrieval Augmented Generation (RAG)
- Prompt Engineering Techniques
- Fine-tuning Methods

** Evaluation
- ROUGE, BLEU, BERTScore

* Domain 4: Guidelines for Responsible AI

** Key Features
- Bias, Fairness, Inclusivity
- Robustness and Safety

** Considerations
- Legal Risks
- Dataset Characteristics
- Bias Effects and Monitoring

* Domain 5: Security, Compliance, and Governance

** AWS Security
- IAM, Encryption, Macie
- Shared Responsibility Model

** Compliance
- ISO, SOC
- Algorithm Accountability

** Data Governance
- Lifecycles, Logging, Monitoring

* TODO Tasks [0/3]
- [ ] Review all AWS services mentioned in the exam guide
- [ ] Practice with hands-on labs
- [ ] Take practice exams

* Resources
- [[https://aws.amazon.com/certification/certified-ai-ml-specialty/][AWS Certified Machine Learning - Specialty]]
- [[https://docs.aws.amazon.com/][AWS Documentation]]

** AWS Power Hour: ML Engineer Associate

- https://pages.awscloud.com/GLOBAL-other-T2-Traincert-Power-Hour-ML-Assoc-2024-reg.html?sc_channel=ha&sc_icampaign=event_global_150_twitch_powerhour-mla_2up_tnc&sc_ichannel=ha&sc_icontent=awssm-1878301_event_tnc&sc_iplace=2up&trk=6d7900ce-02ec-49e3-b3fb-89534535e60b~ha_awssm-1878301_event_tnc

** Services

*** Amazon Q 

** AWS CLI

- /opt/homebrew/share/awscli/examples

#+begin_example
cloudwatch (for monitoring AI/ML workloads)
comprehend (NLP service)
dynamodb (can be used for storing ML model metadata)
glue (for data preparation in ML workflows)
kendra (intelligent search service)
kinesis (for real-time data streaming in ML pipelines)
lambda (for serverless ML inference)
polly (text-to-speech)
rekognition (image and video analysis)
s3 (for storing datasets and models)
sagemaker (core ML platform)
transcribe (speech-to-text)
translate (language translation)
#+end_example

*** Setup 

#+begin_src shell
  aws sts get-caller-identity | jq -r .Arn
#+end_src

#+RESULTS:
*** S3

#+begin_src shell
  aws s3 mb s3://aif-c01
  aws s3 cp resources/test-image.png  s3://aif-c01
#+end_src

#+begin_src shell
aws s3 ls s3://aif-c01
#+end_src

[[file:/opt/homebrew/share/awscli/examples/s3/][S3 AWS CLI Examples]]


*** SageMaker
#+begin_src shell
  aws sagemaker list-notebook-instances | jq -r '.NotebookInstances[]|.NotebookInstanceName'
#+end_src

#+RESULTS:

[[file:/opt/homebrew/share/awscli/examples/sagemaker/][SageMaker AWS CLI Examples]]

*** Comprehend

#+begin_src shell
  aws comprehend detect-sentiment --text "I love using AWS services" --language-code en | jq -r .Sentiment
#+end_src
[[file:/opt/homebrew/share/awscli/examples/comprehend/][
Comprehend AWS CLI Examples]]

*** Rekognition

#+begin_src shell
  aws rekognition detect-labels \
      --image '{"S3Object":{"Bucket":"aif-c01","Name":"test-image.png"}}' \
      --max-labels 10 \
      --region us-east-1 \
      --output json | jq -r '.Labels[]|.Name'
#+end_src
[[file:/opt/homebrew/share/awscli/examples/rekognition/][
Rekognition AWS CLI Examples]]

*** Kendra

#+begin_src shell
  aws kendra list-indices | jq .IndexConfigurationSummaryItems
#+end_src
[[file:/opt/homebrew/share/awscli/examples/kendra/][
Kendra AWS CLI Examples]]

*** Polly

#+begin_src shell
  aws polly start-speech-synthesis-task --output-format mp3 --output-s3-bucket-name aif-c01 --text "Hello, welcome to AWS AI services" --voice-id Joanna
#+end_src

#+begin_src shell
  aws polly list-speech-synthesis-tasks | jq .SynthesisTasks
  aws s3 ls aif-c01
#+end_src

[[file:/opt/homebrew/share/awscli/examples/polly/][Polly AWS CLI Examples]]

*** Transcribe

#+begin_src shell
  aws transcribe list-transcription-jobs | jq -r  '.TranscriptionJobSummaries[]|.TranscriptionJobName'
#+end_src

#+begin_src shell
  aws transcribe start-transcription-job --transcription-job-name "AIFC03TranscriptionJob$((RANDOM % 9000 + 1000))" --language-code en-US --media-format mp3 --media '{"MediaFileUri": "s3://aif-c01/test-audio.mp3"}' | jq
#+end_src
[[file:/opt/homebrew/share/awscli/examples/transcribe/][
Transcribe AWS CLI Examples]]

*** Translate

#+begin_src shell
  aws translate translate-text --text "Hello, world" --source-language-code en --target-language-code es
#+end_src
[[file:/opt/homebrew/share/awscli/examples/translate/][
Translate AWS CLI Examples]]

*** Lambda

#+begin_src shell
  aws lambda list-functions | jq -r '.Functions[]|.FunctionName'
#+end_src
[[file:/opt/homebrew/share/awscli/examples/lambda/][
Lambda AWS CLI Examples]]


*** CloudWatch

#+begin_src shell
aws cloudwatch list-metrics --namespace "AWS/SageMaker" | jq .Metrics
#+end_src
[[file:/opt/homebrew/share/awscli/examples/cloudwatch/][
CloudWatch AWS CLI Examples]]

*** Kinesis

#+begin_src shell
aws kinesis list-streams | jq .StreamNames
#+end_src
[[file:/opt/homebrew/share/awscli/examples/kinesis/][Kinesis AWS CLI Examples]]

*** Glue

#+begin_src shell
aws glue get-databases | jq .DatabaseList
#+end_src

[[file:/opt/homebrew/share/awscli/examples/glue/][Glue AWS CLI Examples]]

*** DynamoDB

#+begin_src shell
aws dynamodb list-tables | jq -r '.TableNames[]'
#+end_src

[[file:/opt/homebrew/share/awscli/examples/dynamodb/][DynamoDB AWS CLI Examples]]


